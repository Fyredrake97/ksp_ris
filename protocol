Race Into Space network protocol
================================

Uses HTTP as an underlayer, and a simple RPC approach of GET variables and
 JSON responses.  So for the most part, we can talk in terms of Python dicts.
Dates are formatted as {'year': year, 'day': day}.  If two players achieve a
 first on the same day, they both get the payout (if eligible).

Sync Message
------------
/sync
Required inputs: game.
Optional inputs: player, date.
Semantics: I have reached the given date, and all completions before that date
 have already been notified.  (If date or player not given, then pure read.)
Outputs: {player.name: {'date': player.date, 'leader': player.leader}
          for player in game.players}

Completion Message
------------------
/completed
Required inputs: game, player, contract, date.
Semantics: I have completed the given contract at the given date.
Outputs: <redirect to /result>

Contract Result Message
-----------------------
/result
Required inputs: game, contract
Semantics: pure read.
Outputs: {player.name: {'date': contract.date[player],
                        'first': contract.first[player]}
          for player in game.players if contract.completed[player]}
Possible values of contract.first[player] are:
    first: we are known to have got there first; all players have passed our
           date, without completing.  Also, we were eligible for payout.
    was_leader: we are known to have got there first, but we were the leader at
                the time so we don't get a payout.
    unknown: currently unknown.  Our date is the earliest thus far recorded,
             but some players are still before that date.
    not_first: known not to be first.  Someone has recorded an earlier date
               than ours.
